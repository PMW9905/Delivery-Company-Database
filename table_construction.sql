CREATE TABLE EMPLOYEE(
emp_ID VARCHAR(4) NOT NULL, 
firstName VARCHAR(32),
middleName VARCHAR(32),
lastName VARCHAR(32),
addr VARCHAR(64),
gender CHAR(1),
dob DATE,
PRIMARY KEY(emp_ID),
CONSTRAINT id_format CHECK(REGEXP_LIKE(emp_ID,'^E[0-9]{3}'))
);

CREATE OR REPLACE
  TRIGGER EMPLOYEE_BIR
    BEFORE INSERT
    ON EMPLOYEE
    FOR EACH ROW
    BEGIN
        IF ADD_MONTHS(:new.dob,192) > TRUNC(SYSDATE)
          THEN
             RAISE_APPLICATION_ERROR(-20950,'Employee is under 18!');
        END IF;
END;

CREATE TABLE EMPLOYEE_PHONE#(
emp_ID VARCHAR(4) NOT NULL, 
phone# INT,
PRIMARY KEY(emp_ID,phone#),
FOREIGN KEY(emp_ID) REFERENCES EMPLOYEE(emp_ID)
);

CREATE TABLE AREA_MANAGER(
emp_ID VARCHAR(4) NOT NULL, 
area_ID INT,
startDate DATE,
PRIMARY KEY(emp_ID),
FOREIGN KEY(emp_ID) REFERENCES EMPLOYEE(emp_ID)
);

CREATE TABLE DELIVERER(
emp_ID VARCHAR(4) NOT NULL, 
startDate DATE,
PRIMARY KEY(emp_ID),
FOREIGN KEY(emp_ID) REFERENCES EMPLOYEE(emp_ID)
);

CREATE TABLE DELIVERER_VEHICLE(
emp_ID VARCHAR(4) NOT NULL, 
vehicle VARCHAR(32),
vmodel VARCHAR(32),
maker VARCHAR(32),
plate# VARCHAR(8),
color VARCHAR(16),
PRIMARY KEY(emp_ID),
FOREIGN KEY(emp_ID) REFERENCES EMPLOYEE(emp_ID)
);

CREATE TABLE STAFF(
emp_ID VARCHAR(4) NOT NULL, 
startDate DATE,
PRIMARY KEY(emp_ID),
FOREIGN KEY(emp_ID) REFERENCES EMPLOYEE(emp_ID)
);

CREATE TABLE AREA(
area_ID INT NOT NULL,
area_name VARCHAR(32),
PRIMARY KEY (area_ID)
);

CREATE TABLE RESTAURANT(
restaurant_name VARCHAR(32) NOT NULL,
area_ID INT,
phone# INT,
addr VARCHAR(32),
dbStart DATE,
dbEnd DATE,
PRIMARY KEY (restaurant_name)
);

CREATE TABLE RESTAURANT_TYPE(
restaurant_name VARCHAR(32) NOT NULL,
restraunt_type VARCHAR(16),
PRIMARY KEY (restaurant_name),
FOREIGN KEY (restaurant_name) REFERENCES RESTAURANT(restaurant_name)
);

CREATE TABLE CUSTOMER(
customer_ID INT NOT NULL, 
firstName VARCHAR(32),
middleName VARCHAR(32),
lastName VARCHAR(32),
addr VARCHAR(64),
phone# INT,
join_date DATE,
PRIMARY KEY(customer_ID)
);

CREATE TABLE ORDINARY_CUSTOMER(
customer_ID INT NOT NULL, 
ordinary_ID INT NOT NULL,
PRIMARY KEY(ordinary_ID),
FOREIGN KEY (customer_ID) REFERENCES CUSTOMER(customer_ID)
);

CREATE TABLE SILVER_MEMBER(
customer_ID INT NOT NULL, 
mem_ID INT NOT NULL,
PRIMARY KEY(mem_ID),
FOREIGN KEY (customer_ID) REFERENCES CUSTOMER(customer_ID)
);

CREATE TABLE MEMBER_CARD(
member_ID INT NOT NULL,
mem_ID INT NOT NULL,
mem_DATE DATE,
PRIMARY KEY(member_ID)
);

CREATE TABLE PROMOTION(
code INT NOT NULL,
p_desc VARCHAR(64),
PRIMARY KEY(code)
);

CREATE TABLE ORDERtbl(
order_ID INT NOT NULL,
restaurant_name VARCHAR(32),
totBal FLOAT,
order_time TIMESTAMP,
confirm# INT,
order_type VARCHAR(32),
PRIMARY KEY(order_ID),
FOREIGN KEY(restaurant_name) REFERENCES RESTAURANT(restaurant_name)
);

CREATE TABLE ORDER_CONTENTS(
order_ID INT NOT NULL,
order_contents VARCHAR(32),
PRIMARY KEY(order_ID, order_contents),
FOREIGN KEY(order_ID) REFERENCES ORDERtbl(order_ID)
);

CREATE TABLE USES(
code INT NOT NULL,
customer_ID INT,
PRIMARY KEY(code),
FOREIGN KEY(code) REFERENCES PROMOTION(code),
FOREIGN KEY(customer_ID) REFERENCES CUSTOMER(customer_ID)
);

CREATE TABLE SUPERVISES(
delivererEmp_ID VARCHAR(4) NOT NULL,
managerEmp_ID VARCHAR(4) NOT NULL,
PRIMARY KEY(delivererEmp_ID,managerEmp_ID),
FOREIGN KEY(delivererEmp_ID) REFERENCES DELIVERER(emp_ID),
FOREIGN KEY(managerEmp_ID) REFERENCES AREA_MANAGER(emp_ID)
);

CREATE TABLE CONTRACTS_WITH(
emp_ID VARCHAR(4) NOT NULL,
restaurant_name VARCHAR(32) NOT NULL,
PRIMARY KEY(emp_ID,restaurant_name),
FOREIGN KEY(restaurant_name) REFERENCES RESTAURANT(restaurant_name),
FOREIGN KEY(emp_ID) REFERENCES AREA_MANAGER(emp_ID)
);

CREATE TABLE DELIVERIES(
order_ID INT NOT NULL,
emp_ID VARCHAR(4) NOT NULL,
PRIMARY KEY(order_id,emp_ID),
FOREIGN KEY(emp_ID) REFERENCES DELIVERER(emp_ID),
FOREIGN KEY(order_ID) REFERENCES ORDERtbl(order_ID)
);

CREATE TABLE CONTAINS(
area_ID INT NOT NULL,
restaurant_name VARCHAR(32) NOT NULL,
PRIMARY KEY(area_ID,restaurant_name),
FOREIGN KEY(restaurant_name) REFERENCES RESTAURANT(restaurant_name),
FOREIGN KEY(area_ID) REFERENCES AREA(area_ID)
);

CREATE TABLE ISSUES(
emp_ID VARCHAR(4) NOT NULL,
member_ID INT,
PRIMARY KEY(emp_ID),
FOREIGN KEY(member_ID) REFERENCES MEMBER_CARD(member_ID),
FOREIGN KEY(emp_ID) REFERENCES STAFF(emp_ID)
);

CREATE TABLE HAS(
code INT NOT NULL,
restaurant_name VARCHAR(32) NOT NULL,
PRIMARY KEY(code,restaurant_name),
FOREIGN KEY(restaurant_name) REFERENCES RESTAURANT(restaurant_name),
FOREIGN KEY(code) REFERENCES PROMOTION(code)
);

CREATE TABLE BELONGS_TO(
order_ID INT NOT NULL,
restaurant_name VARCHAR(32) NOT NULL,
PRIMARY KEY(order_ID,restaurant_name),
FOREIGN KEY(restaurant_name) REFERENCES RESTAURANT(restaurant_name),
FOREIGN KEY(order_ID) REFERENCES ORDERtbl(order_ID)
);

CREATE TABLE CREATES(
order_ID INT NOT NULL,
customer_ID INT,
PRIMARY KEY(order_ID),
FOREIGN KEY(customer_ID) REFERENCES CUSTOMER(customer_ID),
FOREIGN KEY(order_ID) REFERENCES ORDERtbl(order_ID)
);

CREATE TABLE MANAGES(
emp_ID VARCHAR(4) NOT NULL,
area_ID INT NOT NULL,
PRIMARY KEY(emp_ID,area_ID),
FOREIGN KEY(area_ID) REFERENCES AREA(area_ID),
FOREIGN KEY(emp_ID) REFERENCES AREA_MANAGER(emp_ID)
);

CREATE TABLE ISSUED(
member_ID INT,
mem_ID INT NOT NULL,
PRIMARY KEY(mem_ID),
FOREIGN KEY(member_ID) REFERENCES MEMBER_CARD(member_ID),
FOREIGN KEY(mem_ID) REFERENCES SILVER_MEMBER(mem_ID)
);
